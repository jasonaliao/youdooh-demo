{
  "version": 3,
  "sources": ["<define:process.env.REMIX_DEV_HTTP_ORIGIN>", "css-bundle-update-plugin-ns:/Users/jasonliao/code/yoodooh-demo/node_modules/@remix-run/css-bundle/dist/index.js", "<stdin>", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "../app/root.tsx", "../app/routes/get-dooh-by-id.tsx", "../utils/supabase.ts", "../app/routes/_index.tsx", "../app/components/navbar/Navbar.tsx", "../app/components/dooh-finder/DoohFinder.tsx", "../app/components/cluster-map/ClusterMap.tsx", "../node_modules/supercluster/index.js", "../node_modules/kdbush/index.js", "../app/components/cluster-map/MarkerPin.tsx", "../app/components/cluster-map/ClusterPin.tsx", "../app/components/cluster-map/constants.ts", "../app/components/dooh-finder/DoohDetails.tsx", "../app/components/slide-in-drawer/SlideInDrawer.tsx", "../app/utils/map.server.ts", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["", "/**\n * @remix-run/css-bundle v1.18.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// Injected by `cssBundlePlugin`\nlet cssBundleHref = typeof undefined === \"string\" ? undefined : undefined;\n\nexports.cssBundleHref = cssBundleHref;\n", "export * from \"@remix-run/dev/server-build\";", "\nimport * as entryServer from \"/Users/jasonliao/code/yoodooh-demo/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/get-dooh-by-id.tsx\";\nimport * as route2 from \"./routes/_index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v2_dev\":true,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_headers\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const dev = {\"port\":3001}\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/get-dooh-by-id\": {\n      id: \"routes/get-dooh-by-id\",\n      parentId: \"root\",\n      path: \"get-dooh-by-id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import { cssBundleHref } from '@remix-run/css-bundle';\nimport tailwindStyles from 'app/styles/tailwind.css';\nimport type { LinksFunction } from '@remix-run/node';\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration } from\n'@remix-run/react';\n\nexport const links: LinksFunction = () => [\n{ rel: 'stylesheet', href: tailwindStyles },\n...(cssBundleHref ? [{ rel: 'stylesheet', href: cssBundleHref }] : [])];\n\n\nexport default function App() {\n  return (\n    <html lang='en'>\n            <head>\n                <meta charSet='utf-8' />\n                <meta\n          name='viewport'\n          content='width=device-width,initial-scale=1' />\n\n                <Meta />\n                <Links />\n            </head>\n            <body>\n                <Outlet />\n                <ScrollRestoration />\n                <Scripts />\n                <LiveReload />\n            </body>\n        </html>);\n\n}", "import type { LoaderArgs } from '@remix-run/node'; // or cloudflare/deno\nimport supabase from 'utils/supabase';\n\nexport const loader = async ({ request }: LoaderArgs) => {\n    const url = new URL(request.url);\n    const id = url.searchParams.get('id');\n\n    const { data } = await supabase\n        .from('creative_dimension')\n        .select()\n        .eq('id', id);\n\n    if (!data?.[0]) {\n        throw new Response(null, {\n            status: 404,\n            statusText: 'Dooh not Found',\n        });\n    }\n\n    return data[0];\n};\n\nexport const QUERY_DOOH_BY_ID = '/get-dooh-by-id';\n", "import { createClient } from '@supabase/supabase-js';\nimport type { Database } from 'generated_types';\n\nexport default createClient<Database>(\n    process.env.SUPABASE_URL!,\n    process.env.SUPABASE_ANON_KEY!\n);\n", "import type { LoaderArgs, V2_MetaFunction } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport supabase from 'utils/supabase';\n\nimport { NavBar } from '~/components/navbar/Navbar';\nimport { DoohFinder } from '~/components/dooh-finder/DoohFinder';\nimport { mapMarkersToPoints } from '~/utils/map.server';\n\nexport const meta: V2_MetaFunction = () => {\n  return [\n  { title: 'Youdooh - Demo' },\n  { name: 'description', content: 'Welcome to Youdooh!' }];\n\n};\n\nexport const links = () => {\n  return [\n  {\n    rel: 'stylesheet',\n    href: 'https://api.tiles.mapbox.com/mapbox-gl-js/v2.8.1/mapbox-gl.css'\n  }];\n\n};\n\nexport const loader = async (args: LoaderArgs) => {\n  const mapBoxToken = process.env.MAPBOX_TOKEN;\n\n  const { data } = await supabase.from('creative_dimension').select();\n  const points = mapMarkersToPoints(data);\n  return { mapBoxToken, points };\n};\n\nexport default function Index() {\n  const { points, mapBoxToken } = useLoaderData<typeof loader>();\n\n  return (\n    <div>\n            <NavBar />\n            <DoohFinder token={mapBoxToken!} points={points} />\n        </div>);\n\n}", "import { Link } from '@remix-run/react';\nimport { Bars3Icon } from '@heroicons/react/24/outline';\n\nexport const NavBar = () => {\n    return (\n        <header className='bg-white drop-shadow'>\n            <nav\n                className='mx-auto flex items-center justify-between p-6 lg:px-8'\n                aria-label='Global'\n            >\n                <div className='flex lg:flex-none mr-8'>\n                    <Bars3Icon className='block h-6 w-6' aria-hidden='true' />\n                </div>\n                <div className='flex lg:flex-1'>\n                    <Link to='/' className='-m-1.5 p-1.5'>\n                        <img\n                            className='h-8 w-120'\n                            src='/logo.png'\n                            alt='Your Company'\n                        />\n                        <span className='sr-only'>YooDooh demo</span>\n                    </Link>\n                </div>\n            </nav>\n        </header>\n    );\n};\n", "import { Fragment, useState } from 'react';\n\nimport { ClusterMap } from '~/components/cluster-map/ClusterMap';\nimport type { ClusterMapProps } from 'app/components/cluster-map/ClusterMap';\n\nimport { DoohDetails } from './DoohDetails';\nimport { SlideInDrawer } from 'app/components/slide-in-drawer/SlideInDrawer';\n\nexport interface DoohFinderProps\n    extends Omit<ClusterMapProps, 'onMarkerClick' | 'onClusterMakerClick'> {}\n\nexport const DoohFinder = ({ token, points }: DoohFinderProps) => {\n    const [activeDoohID, setaActiveDoohID] = useState(0);\n\n    return (\n        <>\n            <ClusterMap\n                token={token!}\n                points={points}\n                onMarkerClick={(pinData) => {\n                    setaActiveDoohID(pinData.properties.id);\n                }}\n            />\n            <SlideInDrawer\n                open={activeDoohID > 0}\n                onClose={() => setaActiveDoohID(0)}\n            >\n                <DoohDetails selectedId={activeDoohID} />\n            </SlideInDrawer>\n        </>\n    );\n};\n", "import { useEffect, useRef, useState } from 'react';\nimport Supercluster from 'supercluster';\nimport Map from 'react-map-gl';\nimport type { MapRef, MapboxMap } from 'react-map-gl';\nimport type { BBox } from 'geojson';\nimport type { Point } from 'app/types';\n\nimport { MarkerPin } from './MarkerPin';\nimport { ClusterPin } from './ClusterPin';\n\nimport {\n    MAP_ORIGIN,\n    MAP_STYLE,\n    MAP_MAX_ZOOM_DEFAULT,\n    MAP_ZOOM_DEFAULT,\n    MAP_BOUND_DEFAULT,\n    MAP_CLUSTER_RADIUS_DEFAULT,\n} from './constants';\n\nexport interface ClusterMapProps extends Partial<MapboxMap> {\n    token: string;\n    points: Point[];\n    onMarkerClick?: (pinData: Point) => void;\n    onClusterMakerClick?: (childrenPins: Point[]) => void;\n}\n\n// Initialize Supercluster instance\nconst superCluster = new Supercluster({\n    radius: MAP_CLUSTER_RADIUS_DEFAULT,\n    maxZoom: MAP_MAX_ZOOM_DEFAULT,\n});\n\nexport const ClusterMap = ({\n    token,\n    points,\n    onMarkerClick,\n    onClusterMakerClick,\n    ...mapBoxProps\n}: ClusterMapProps) => {\n    const mapRef = useRef<MapRef>(null);\n    const [viewport, setViewport] = useState({\n        latitude: MAP_ORIGIN.latitude,\n        longitude: MAP_ORIGIN.longitude,\n        zoom: MAP_ZOOM_DEFAULT,\n    });\n\n    const [clusters, setClusters] = useState<\n        (\n            | Supercluster.PointFeature<Supercluster.AnyProps>\n            | Supercluster.ClusterFeature<Supercluster.AnyProps>\n        )[]\n    >([]);\n    const [bounds, setBounds] = useState(MAP_BOUND_DEFAULT);\n    const [zoom, setZoom] = useState(MAP_ZOOM_DEFAULT);\n\n    // Load points into Supercluster\n    useEffect(() => {\n        superCluster.load(points);\n        setClusters(superCluster.getClusters(bounds as BBox, zoom));\n    }, [points, bounds, zoom]);\n\n    useEffect(() => {\n        if (!mapRef.current) return;\n        setBounds(mapRef.current.getMap().getBounds().toArray().flat());\n    }, []);\n\n    return (\n        <div style={{ position: 'relative' }}>\n            <Map\n                initialViewState={viewport}\n                maxZoom={MAP_MAX_ZOOM_DEFAULT}\n                mapStyle={MAP_STYLE}\n                mapboxAccessToken={token}\n                style={{\n                    width: '100%',\n                    height: 'calc(100vh - 80px)',\n                }}\n                onZoomEnd={(e) => setZoom(e.viewState.zoom)}\n                ref={mapRef}\n                data-test-id={'cluster-map'}\n                {...mapBoxProps}\n            >\n                {clusters.map((cluster) => {\n                    const { cluster: isCluster, point_count } =\n                        cluster.properties;\n                    const [longitude, latitude] = cluster.geometry.coordinates;\n\n                    if (isCluster) {\n                        return (\n                            <ClusterPin\n                                key={cluster.properties.siteId}\n                                longitude={longitude}\n                                latitude={latitude}\n                                pointCount={point_count}\n                                onClusterPinClick={() => {\n                                    const zoom = Math.min(\n                                        superCluster?.getClusterExpansionZoom(\n                                            cluster.id as number\n                                        ),\n                                        MAP_MAX_ZOOM_DEFAULT\n                                    );\n\n                                    mapRef.current?.flyTo({\n                                        center: [longitude, latitude],\n                                        zoom,\n                                        speed: 1,\n                                    });\n\n                                    // TODO: add custom cluster marker click\n                                    if (zoom > 17 && cluster.id) {\n                                        const clusterPins =\n                                            superCluster?.getChildren(\n                                                +cluster.id\n                                            );\n                                        onClusterMakerClick?.(\n                                            clusterPins ?? []\n                                        );\n                                    }\n                                }}\n                            />\n                        );\n                    }\n\n                    return (\n                        <MarkerPin\n                            key={cluster.properties.siteId}\n                            data={cluster}\n                            onMarkerClick={onMarkerClick}\n                        />\n                    );\n                })}\n            </Map>\n        </div>\n    );\n};\n", "\nimport KDBush from 'kdbush';\n\nconst defaultOptions = {\n    minZoom: 0,   // min zoom to generate clusters on\n    maxZoom: 16,  // max zoom level to cluster the points on\n    minPoints: 2, // minimum points to form a cluster\n    radius: 40,   // cluster radius in pixels\n    extent: 512,  // tile extent (radius is calculated relative to it)\n    nodeSize: 64, // size of the KD-tree leaf node, affects performance\n    log: false,   // whether to log timing info\n\n    // whether to generate numeric ids for input features (in vector tiles)\n    generateId: false,\n\n    // a reduce function for calculating custom cluster properties\n    reduce: null, // (accumulated, props) => { accumulated.sum += props.sum; }\n\n    // properties to use for individual points when running the reducer\n    map: props => props // props => ({sum: props.my_value})\n};\n\nconst fround = Math.fround || (tmp => ((x) => { tmp[0] = +x; return tmp[0]; }))(new Float32Array(1));\n\nconst OFFSET_ZOOM = 2;\nconst OFFSET_ID = 3;\nconst OFFSET_PARENT = 4;\nconst OFFSET_NUM = 5;\nconst OFFSET_PROP = 6;\n\nexport default class Supercluster {\n    constructor(options) {\n        this.options = Object.assign(Object.create(defaultOptions), options);\n        this.trees = new Array(this.options.maxZoom + 1);\n        this.stride = this.options.reduce ? 7 : 6;\n        this.clusterProps = [];\n    }\n\n    load(points) {\n        const {log, minZoom, maxZoom} = this.options;\n\n        if (log) console.time('total time');\n\n        const timerId = `prepare ${  points.length  } points`;\n        if (log) console.time(timerId);\n\n        this.points = points;\n\n        // generate a cluster object for each point and index input points into a KD-tree\n        const data = [];\n\n        for (let i = 0; i < points.length; i++) {\n            const p = points[i];\n            if (!p.geometry) continue;\n\n            const [lng, lat] = p.geometry.coordinates;\n            const x = fround(lngX(lng));\n            const y = fround(latY(lat));\n            // store internal point/cluster data in flat numeric arrays for performance\n            data.push(\n                x, y, // projected point coordinates\n                Infinity, // the last zoom the point was processed at\n                i, // index of the source feature in the original input array\n                -1, // parent cluster id\n                1 // number of points in a cluster\n            );\n            if (this.options.reduce) data.push(0); // noop\n        }\n        let tree = this.trees[maxZoom + 1] = this._createTree(data);\n\n        if (log) console.timeEnd(timerId);\n\n        // cluster points on max zoom, then cluster the results on previous zoom, etc.;\n        // results in a cluster hierarchy across zoom levels\n        for (let z = maxZoom; z >= minZoom; z--) {\n            const now = +Date.now();\n\n            // create a new set of clusters for the zoom and index them with a KD-tree\n            tree = this.trees[z] = this._createTree(this._cluster(tree, z));\n\n            if (log) console.log('z%d: %d clusters in %dms', z, tree.numItems, +Date.now() - now);\n        }\n\n        if (log) console.timeEnd('total time');\n\n        return this;\n    }\n\n    getClusters(bbox, zoom) {\n        let minLng = ((bbox[0] + 180) % 360 + 360) % 360 - 180;\n        const minLat = Math.max(-90, Math.min(90, bbox[1]));\n        let maxLng = bbox[2] === 180 ? 180 : ((bbox[2] + 180) % 360 + 360) % 360 - 180;\n        const maxLat = Math.max(-90, Math.min(90, bbox[3]));\n\n        if (bbox[2] - bbox[0] >= 360) {\n            minLng = -180;\n            maxLng = 180;\n        } else if (minLng > maxLng) {\n            const easternHem = this.getClusters([minLng, minLat, 180, maxLat], zoom);\n            const westernHem = this.getClusters([-180, minLat, maxLng, maxLat], zoom);\n            return easternHem.concat(westernHem);\n        }\n\n        const tree = this.trees[this._limitZoom(zoom)];\n        const ids = tree.range(lngX(minLng), latY(maxLat), lngX(maxLng), latY(minLat));\n        const data = tree.data;\n        const clusters = [];\n        for (const id of ids) {\n            const k = this.stride * id;\n            clusters.push(data[k + OFFSET_NUM] > 1 ? getClusterJSON(data, k, this.clusterProps) : this.points[data[k + OFFSET_ID]]);\n        }\n        return clusters;\n    }\n\n    getChildren(clusterId) {\n        const originId = this._getOriginId(clusterId);\n        const originZoom = this._getOriginZoom(clusterId);\n        const errorMsg = 'No cluster with the specified id.';\n\n        const tree = this.trees[originZoom];\n        if (!tree) throw new Error(errorMsg);\n\n        const data = tree.data;\n        if (originId * this.stride >= data.length) throw new Error(errorMsg);\n\n        const r = this.options.radius / (this.options.extent * Math.pow(2, originZoom - 1));\n        const x = data[originId * this.stride];\n        const y = data[originId * this.stride + 1];\n        const ids = tree.within(x, y, r);\n        const children = [];\n        for (const id of ids) {\n            const k = id * this.stride;\n            if (data[k + OFFSET_PARENT] === clusterId) {\n                children.push(data[k + OFFSET_NUM] > 1 ? getClusterJSON(data, k, this.clusterProps) : this.points[data[k + OFFSET_ID]]);\n            }\n        }\n\n        if (children.length === 0) throw new Error(errorMsg);\n\n        return children;\n    }\n\n    getLeaves(clusterId, limit, offset) {\n        limit = limit || 10;\n        offset = offset || 0;\n\n        const leaves = [];\n        this._appendLeaves(leaves, clusterId, limit, offset, 0);\n\n        return leaves;\n    }\n\n    getTile(z, x, y) {\n        const tree = this.trees[this._limitZoom(z)];\n        const z2 = Math.pow(2, z);\n        const {extent, radius} = this.options;\n        const p = radius / extent;\n        const top = (y - p) / z2;\n        const bottom = (y + 1 + p) / z2;\n\n        const tile = {\n            features: []\n        };\n\n        this._addTileFeatures(\n            tree.range((x - p) / z2, top, (x + 1 + p) / z2, bottom),\n            tree.data, x, y, z2, tile);\n\n        if (x === 0) {\n            this._addTileFeatures(\n                tree.range(1 - p / z2, top, 1, bottom),\n                tree.data, z2, y, z2, tile);\n        }\n        if (x === z2 - 1) {\n            this._addTileFeatures(\n                tree.range(0, top, p / z2, bottom),\n                tree.data, -1, y, z2, tile);\n        }\n\n        return tile.features.length ? tile : null;\n    }\n\n    getClusterExpansionZoom(clusterId) {\n        let expansionZoom = this._getOriginZoom(clusterId) - 1;\n        while (expansionZoom <= this.options.maxZoom) {\n            const children = this.getChildren(clusterId);\n            expansionZoom++;\n            if (children.length !== 1) break;\n            clusterId = children[0].properties.cluster_id;\n        }\n        return expansionZoom;\n    }\n\n    _appendLeaves(result, clusterId, limit, offset, skipped) {\n        const children = this.getChildren(clusterId);\n\n        for (const child of children) {\n            const props = child.properties;\n\n            if (props && props.cluster) {\n                if (skipped + props.point_count <= offset) {\n                    // skip the whole cluster\n                    skipped += props.point_count;\n                } else {\n                    // enter the cluster\n                    skipped = this._appendLeaves(result, props.cluster_id, limit, offset, skipped);\n                    // exit the cluster\n                }\n            } else if (skipped < offset) {\n                // skip a single point\n                skipped++;\n            } else {\n                // add a single point\n                result.push(child);\n            }\n            if (result.length === limit) break;\n        }\n\n        return skipped;\n    }\n\n    _createTree(data) {\n        const tree = new KDBush(data.length / this.stride | 0, this.options.nodeSize, Float32Array);\n        for (let i = 0; i < data.length; i += this.stride) tree.add(data[i], data[i + 1]);\n        tree.finish();\n        tree.data = data;\n        return tree;\n    }\n\n    _addTileFeatures(ids, data, x, y, z2, tile) {\n        for (const i of ids) {\n            const k = i * this.stride;\n            const isCluster = data[k + OFFSET_NUM] > 1;\n\n            let tags, px, py;\n            if (isCluster) {\n                tags = getClusterProperties(data, k, this.clusterProps);\n                px = data[k];\n                py = data[k + 1];\n            } else {\n                const p = this.points[data[k + OFFSET_ID]];\n                tags = p.properties;\n                const [lng, lat] = p.geometry.coordinates;\n                px = lngX(lng);\n                py = latY(lat);\n            }\n\n            const f = {\n                type: 1,\n                geometry: [[\n                    Math.round(this.options.extent * (px * z2 - x)),\n                    Math.round(this.options.extent * (py * z2 - y))\n                ]],\n                tags\n            };\n\n            // assign id\n            let id;\n            if (isCluster || this.options.generateId) {\n                // optionally generate id for points\n                id = data[k + OFFSET_ID];\n            } else {\n                // keep id if already assigned\n                id = this.points[data[k + OFFSET_ID]].id;\n            }\n\n            if (id !== undefined) f.id = id;\n\n            tile.features.push(f);\n        }\n    }\n\n    _limitZoom(z) {\n        return Math.max(this.options.minZoom, Math.min(Math.floor(+z), this.options.maxZoom + 1));\n    }\n\n    _cluster(tree, zoom) {\n        const {radius, extent, reduce, minPoints} = this.options;\n        const r = radius / (extent * Math.pow(2, zoom));\n        const data = tree.data;\n        const nextData = [];\n        const stride = this.stride;\n\n        // loop through each point\n        for (let i = 0; i < data.length; i += stride) {\n            // if we've already visited the point at this zoom level, skip it\n            if (data[i + OFFSET_ZOOM] <= zoom) continue;\n            data[i + OFFSET_ZOOM] = zoom;\n\n            // find all nearby points\n            const x = data[i];\n            const y = data[i + 1];\n            const neighborIds = tree.within(data[i], data[i + 1], r);\n\n            const numPointsOrigin = data[i + OFFSET_NUM];\n            let numPoints = numPointsOrigin;\n\n            // count the number of points in a potential cluster\n            for (const neighborId of neighborIds) {\n                const k = neighborId * stride;\n                // filter out neighbors that are already processed\n                if (data[k + OFFSET_ZOOM] > zoom) numPoints += data[k + OFFSET_NUM];\n            }\n\n            // if there were neighbors to merge, and there are enough points to form a cluster\n            if (numPoints > numPointsOrigin && numPoints >= minPoints) {\n                let wx = x * numPointsOrigin;\n                let wy = y * numPointsOrigin;\n\n                let clusterProperties;\n                let clusterPropIndex = -1;\n\n                // encode both zoom and point index on which the cluster originated -- offset by total length of features\n                const id = ((i / stride | 0) << 5) + (zoom + 1) + this.points.length;\n\n                for (const neighborId of neighborIds) {\n                    const k = neighborId * stride;\n\n                    if (data[k + OFFSET_ZOOM] <= zoom) continue;\n                    data[k + OFFSET_ZOOM] = zoom; // save the zoom (so it doesn't get processed twice)\n\n                    const numPoints2 = data[k + OFFSET_NUM];\n                    wx += data[k] * numPoints2; // accumulate coordinates for calculating weighted center\n                    wy += data[k + 1] * numPoints2;\n\n                    data[k + OFFSET_PARENT] = id;\n\n                    if (reduce) {\n                        if (!clusterProperties) {\n                            clusterProperties = this._map(data, i, true);\n                            clusterPropIndex = this.clusterProps.length;\n                            this.clusterProps.push(clusterProperties);\n                        }\n                        reduce(clusterProperties, this._map(data, k));\n                    }\n                }\n\n                data[i + OFFSET_PARENT] = id;\n                nextData.push(wx / numPoints, wy / numPoints, Infinity, id, -1, numPoints);\n                if (reduce) nextData.push(clusterPropIndex);\n\n            } else { // left points as unclustered\n                for (let j = 0; j < stride; j++) nextData.push(data[i + j]);\n\n                if (numPoints > 1) {\n                    for (const neighborId of neighborIds) {\n                        const k = neighborId * stride;\n                        if (data[k + OFFSET_ZOOM] <= zoom) continue;\n                        data[k + OFFSET_ZOOM] = zoom;\n                        for (let j = 0; j < stride; j++) nextData.push(data[k + j]);\n                    }\n                }\n            }\n        }\n\n        return nextData;\n    }\n\n    // get index of the point from which the cluster originated\n    _getOriginId(clusterId) {\n        return (clusterId - this.points.length) >> 5;\n    }\n\n    // get zoom of the point from which the cluster originated\n    _getOriginZoom(clusterId) {\n        return (clusterId - this.points.length) % 32;\n    }\n\n    _map(data, i, clone) {\n        if (data[i + OFFSET_NUM] > 1) {\n            const props = this.clusterProps[data[i + OFFSET_PROP]];\n            return clone ? Object.assign({}, props) : props;\n        }\n        const original = this.points[data[i + OFFSET_ID]].properties;\n        const result = this.options.map(original);\n        return clone && result === original ? Object.assign({}, result) : result;\n    }\n}\n\nfunction getClusterJSON(data, i, clusterProps) {\n    return {\n        type: 'Feature',\n        id: data[i + OFFSET_ID],\n        properties: getClusterProperties(data, i, clusterProps),\n        geometry: {\n            type: 'Point',\n            coordinates: [xLng(data[i]), yLat(data[i + 1])]\n        }\n    };\n}\n\nfunction getClusterProperties(data, i, clusterProps) {\n    const count = data[i + OFFSET_NUM];\n    const abbrev =\n        count >= 10000 ? `${Math.round(count / 1000)  }k` :\n        count >= 1000 ? `${Math.round(count / 100) / 10  }k` : count;\n    const propIndex = data[i + OFFSET_PROP];\n    const properties = propIndex === -1 ? {} : Object.assign({}, clusterProps[propIndex]);\n    return Object.assign(properties, {\n        cluster: true,\n        cluster_id: data[i + OFFSET_ID],\n        point_count: count,\n        point_count_abbreviated: abbrev\n    });\n}\n\n// longitude/latitude to spherical mercator in [0..1] range\nfunction lngX(lng) {\n    return lng / 360 + 0.5;\n}\nfunction latY(lat) {\n    const sin = Math.sin(lat * Math.PI / 180);\n    const y = (0.5 - 0.25 * Math.log((1 + sin) / (1 - sin)) / Math.PI);\n    return y < 0 ? 0 : y > 1 ? 1 : y;\n}\n\n// spherical mercator to longitude/latitude\nfunction xLng(x) {\n    return (x - 0.5) * 360;\n}\nfunction yLat(y) {\n    const y2 = (180 - y * 360) * Math.PI / 180;\n    return 360 * Math.atan(Math.exp(y2)) / Math.PI - 90;\n}\n", "\nconst ARRAY_TYPES = [\n    Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array,\n    Int32Array, Uint32Array, Float32Array, Float64Array\n];\n\n/** @typedef {Int8ArrayConstructor | Uint8ArrayConstructor | Uint8ClampedArrayConstructor | Int16ArrayConstructor | Uint16ArrayConstructor | Int32ArrayConstructor | Uint32ArrayConstructor | Float32ArrayConstructor | Float64ArrayConstructor} TypedArrayConstructor */\n\nconst VERSION = 1; // serialized format version\nconst HEADER_SIZE = 8;\n\nexport default class KDBush {\n\n    /**\n     * Creates an index from raw `ArrayBuffer` data.\n     * @param {ArrayBuffer} data\n     */\n    static from(data) {\n        if (!(data instanceof ArrayBuffer)) {\n            throw new Error('Data must be an instance of ArrayBuffer.');\n        }\n        const [magic, versionAndType] = new Uint8Array(data, 0, 2);\n        if (magic !== 0xdb) {\n            throw new Error('Data does not appear to be in a KDBush format.');\n        }\n        const version = versionAndType >> 4;\n        if (version !== VERSION) {\n            throw new Error(`Got v${version} data when expected v${VERSION}.`);\n        }\n        const ArrayType = ARRAY_TYPES[versionAndType & 0x0f];\n        if (!ArrayType) {\n            throw new Error('Unrecognized array type.');\n        }\n        const [nodeSize] = new Uint16Array(data, 2, 1);\n        const [numItems] = new Uint32Array(data, 4, 1);\n\n        return new KDBush(numItems, nodeSize, ArrayType, data);\n    }\n\n    /**\n     * Creates an index that will hold a given number of items.\n     * @param {number} numItems\n     * @param {number} [nodeSize=64] Size of the KD-tree node (64 by default).\n     * @param {TypedArrayConstructor} [ArrayType=Float64Array] The array type used for coordinates storage (`Float64Array` by default).\n     * @param {ArrayBuffer} [data] (For internal use only)\n     */\n    constructor(numItems, nodeSize = 64, ArrayType = Float64Array, data) {\n        if (isNaN(numItems) || numItems < 0) throw new Error(`Unpexpected numItems value: ${numItems}.`);\n\n        this.numItems = +numItems;\n        this.nodeSize = Math.min(Math.max(+nodeSize, 2), 65535);\n        this.ArrayType = ArrayType;\n        this.IndexArrayType = numItems < 65536 ? Uint16Array : Uint32Array;\n\n        const arrayTypeIndex = ARRAY_TYPES.indexOf(this.ArrayType);\n        const coordsByteSize = numItems * 2 * this.ArrayType.BYTES_PER_ELEMENT;\n        const idsByteSize = numItems * this.IndexArrayType.BYTES_PER_ELEMENT;\n        const padCoords = (8 - idsByteSize % 8) % 8;\n\n        if (arrayTypeIndex < 0) {\n            throw new Error(`Unexpected typed array class: ${ArrayType}.`);\n        }\n\n        if (data && (data instanceof ArrayBuffer)) { // reconstruct an index from a buffer\n            this.data = data;\n            this.ids = new this.IndexArrayType(this.data, HEADER_SIZE, numItems);\n            this.coords = new this.ArrayType(this.data, HEADER_SIZE + idsByteSize + padCoords, numItems * 2);\n            this._pos = numItems * 2;\n            this._finished = true;\n        } else { // initialize a new index\n            this.data = new ArrayBuffer(HEADER_SIZE + coordsByteSize + idsByteSize + padCoords);\n            this.ids = new this.IndexArrayType(this.data, HEADER_SIZE, numItems);\n            this.coords = new this.ArrayType(this.data, HEADER_SIZE + idsByteSize + padCoords, numItems * 2);\n            this._pos = 0;\n            this._finished = false;\n\n            // set header\n            new Uint8Array(this.data, 0, 2).set([0xdb, (VERSION << 4) + arrayTypeIndex]);\n            new Uint16Array(this.data, 2, 1)[0] = nodeSize;\n            new Uint32Array(this.data, 4, 1)[0] = numItems;\n        }\n    }\n\n    /**\n     * Add a point to the index.\n     * @param {number} x\n     * @param {number} y\n     * @returns {number} An incremental index associated with the added item (starting from `0`).\n     */\n    add(x, y) {\n        const index = this._pos >> 1;\n        this.ids[index] = index;\n        this.coords[this._pos++] = x;\n        this.coords[this._pos++] = y;\n        return index;\n    }\n\n    /**\n     * Perform indexing of the added points.\n     */\n    finish() {\n        const numAdded = this._pos >> 1;\n        if (numAdded !== this.numItems) {\n            throw new Error(`Added ${numAdded} items when expected ${this.numItems}.`);\n        }\n        // kd-sort both arrays for efficient search\n        sort(this.ids, this.coords, this.nodeSize, 0, this.numItems - 1, 0);\n\n        this._finished = true;\n        return this;\n    }\n\n    /**\n     * Search the index for items within a given bounding box.\n     * @param {number} minX\n     * @param {number} minY\n     * @param {number} maxX\n     * @param {number} maxY\n     * @returns {number[]} An array of indices correponding to the found items.\n     */\n    range(minX, minY, maxX, maxY) {\n        if (!this._finished) throw new Error('Data not yet indexed - call index.finish().');\n\n        const {ids, coords, nodeSize} = this;\n        const stack = [0, ids.length - 1, 0];\n        const result = [];\n\n        // recursively search for items in range in the kd-sorted arrays\n        while (stack.length) {\n            const axis = stack.pop() || 0;\n            const right = stack.pop() || 0;\n            const left = stack.pop() || 0;\n\n            // if we reached \"tree node\", search linearly\n            if (right - left <= nodeSize) {\n                for (let i = left; i <= right; i++) {\n                    const x = coords[2 * i];\n                    const y = coords[2 * i + 1];\n                    if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[i]);\n                }\n                continue;\n            }\n\n            // otherwise find the middle index\n            const m = (left + right) >> 1;\n\n            // include the middle item if it's in range\n            const x = coords[2 * m];\n            const y = coords[2 * m + 1];\n            if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[m]);\n\n            // queue search in halves that intersect the query\n            if (axis === 0 ? minX <= x : minY <= y) {\n                stack.push(left);\n                stack.push(m - 1);\n                stack.push(1 - axis);\n            }\n            if (axis === 0 ? maxX >= x : maxY >= y) {\n                stack.push(m + 1);\n                stack.push(right);\n                stack.push(1 - axis);\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Search the index for items within a given radius.\n     * @param {number} qx\n     * @param {number} qy\n     * @param {number} r Query radius.\n     * @returns {number[]} An array of indices correponding to the found items.\n     */\n    within(qx, qy, r) {\n        if (!this._finished) throw new Error('Data not yet indexed - call index.finish().');\n\n        const {ids, coords, nodeSize} = this;\n        const stack = [0, ids.length - 1, 0];\n        const result = [];\n        const r2 = r * r;\n\n        // recursively search for items within radius in the kd-sorted arrays\n        while (stack.length) {\n            const axis = stack.pop() || 0;\n            const right = stack.pop() || 0;\n            const left = stack.pop() || 0;\n\n            // if we reached \"tree node\", search linearly\n            if (right - left <= nodeSize) {\n                for (let i = left; i <= right; i++) {\n                    if (sqDist(coords[2 * i], coords[2 * i + 1], qx, qy) <= r2) result.push(ids[i]);\n                }\n                continue;\n            }\n\n            // otherwise find the middle index\n            const m = (left + right) >> 1;\n\n            // include the middle item if it's in range\n            const x = coords[2 * m];\n            const y = coords[2 * m + 1];\n            if (sqDist(x, y, qx, qy) <= r2) result.push(ids[m]);\n\n            // queue search in halves that intersect the query\n            if (axis === 0 ? qx - r <= x : qy - r <= y) {\n                stack.push(left);\n                stack.push(m - 1);\n                stack.push(1 - axis);\n            }\n            if (axis === 0 ? qx + r >= x : qy + r >= y) {\n                stack.push(m + 1);\n                stack.push(right);\n                stack.push(1 - axis);\n            }\n        }\n\n        return result;\n    }\n}\n\n/**\n * @param {Uint16Array | Uint32Array} ids\n * @param {InstanceType<TypedArrayConstructor>} coords\n * @param {number} nodeSize\n * @param {number} left\n * @param {number} right\n * @param {number} axis\n */\nfunction sort(ids, coords, nodeSize, left, right, axis) {\n    if (right - left <= nodeSize) return;\n\n    const m = (left + right) >> 1; // middle index\n\n    // sort ids and coords around the middle index so that the halves lie\n    // either left/right or top/bottom correspondingly (taking turns)\n    select(ids, coords, m, left, right, axis);\n\n    // recursively kd-sort first half and second half on the opposite axis\n    sort(ids, coords, nodeSize, left, m - 1, 1 - axis);\n    sort(ids, coords, nodeSize, m + 1, right, 1 - axis);\n}\n\n/**\n * Custom Floyd-Rivest selection algorithm: sort ids and coords so that\n * [left..k-1] items are smaller than k-th item (on either x or y axis)\n * @param {Uint16Array | Uint32Array} ids\n * @param {InstanceType<TypedArrayConstructor>} coords\n * @param {number} k\n * @param {number} left\n * @param {number} right\n * @param {number} axis\n */\nfunction select(ids, coords, k, left, right, axis) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            select(ids, coords, k, newLeft, newRight, axis);\n        }\n\n        const t = coords[2 * k + axis];\n        let i = left;\n        let j = right;\n\n        swapItem(ids, coords, left, k);\n        if (coords[2 * right + axis] > t) swapItem(ids, coords, left, right);\n\n        while (i < j) {\n            swapItem(ids, coords, i, j);\n            i++;\n            j--;\n            while (coords[2 * i + axis] < t) i++;\n            while (coords[2 * j + axis] > t) j--;\n        }\n\n        if (coords[2 * left + axis] === t) swapItem(ids, coords, left, j);\n        else {\n            j++;\n            swapItem(ids, coords, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @param {Uint16Array | Uint32Array} ids\n * @param {InstanceType<TypedArrayConstructor>} coords\n * @param {number} i\n * @param {number} j\n */\nfunction swapItem(ids, coords, i, j) {\n    swap(ids, i, j);\n    swap(coords, 2 * i, 2 * j);\n    swap(coords, 2 * i + 1, 2 * j + 1);\n}\n\n/**\n * @param {InstanceType<TypedArrayConstructor>} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @param {number} ax\n * @param {number} ay\n * @param {number} bx\n * @param {number} by\n */\nfunction sqDist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n", "import { Marker } from 'react-map-gl';\nimport { BuildingOfficeIcon, TvIcon } from '@heroicons/react/24/solid';\nimport type { Point } from 'app/types';\n\nimport type { ClusterMapProps } from './ClusterMap';\n\nexport interface MarkerProp extends Pick<ClusterMapProps, 'onMarkerClick'> {\n    data: Point;\n}\n\nexport const MarkerPin = ({ data, onMarkerClick }: MarkerProp) => {\n    const [longitude, latitude] = data.geometry.coordinates;\n\n    return (\n        <Marker\n            key={data.properties.siteId}\n            longitude={longitude}\n            latitude={latitude}\n        >\n            <div onClick={() => onMarkerClick?.(data)}>\n                {getPinIcon(data.properties.media_type)}\n            </div>\n        </Marker>\n    );\n};\n\nexport const getPinIcon = (pinType: string) => {\n    switch (pinType) {\n        case 'Billboards':\n            return (\n                <TvIcon\n                    className='block h-6 w-6 pin-billboard'\n                    aria-hidden={true}\n                />\n            );\n\n        default:\n            return (\n                <BuildingOfficeIcon\n                    className='block h-6 w-6 pin-building'\n                    aria-hidden={true}\n                />\n            );\n    }\n};\n", "import { Marker } from 'react-map-gl';\n\nexport interface ClusterPinProps {\n    longitude: number;\n    latitude: number;\n    pointCount: string;\n    onClusterPinClick: () => void;\n}\n\nexport const ClusterPin = ({\n    latitude,\n    longitude,\n    pointCount,\n    onClusterPinClick,\n}: ClusterPinProps) => {\n    return (\n        <Marker longitude={longitude} latitude={latitude}>\n            <div\n                className='flex justify-center items-center text-md border-2 rounded-full bg-slate-300 opacity-50 hover:opacity-100'\n                style={{\n                    width: `50px`,\n                    height: `50px`,\n                }}\n                onClick={() => onClusterPinClick()}\n            >\n                {pointCount}\n            </div>\n        </Marker>\n    );\n};\n", "export const MAP_STYLE = 'mapbox://styles/jasonaliao/cljwp7s4p00ad01rd6u6s6uyc';\n\nexport const MAP_ORIGIN = { latitude: -36.85361, longitude: 174.76499 };\nexport const MAP_ZOOM_DEFAULT = 9;\nexport const MAP_MAX_ZOOM_DEFAULT = 20;\nexport const MAP_BOUND_DEFAULT = [-180, -85, 180, 85];\nexport const MAP_CLUSTER_RADIUS_DEFAULT = 50;\n", "import { useFetcher } from '@remix-run/react';\nimport { useEffect } from 'react';\nimport { QUERY_DOOH_BY_ID } from '~/routes/get-dooh-by-id';\nimport type { Marker } from 'app/types';\n\nexport interface DoohDetailsProps {\n    selectedId: number;\n}\n\nexport const DoohDetails = ({ selectedId }: DoohDetailsProps) => {\n    const fetcher = useFetcher<Marker>();\n    const { data } = fetcher;\n\n    // Fetch dooh details by given ID\n    useEffect(() => {\n        const formData = new FormData();\n        formData.append('id', selectedId.toString());\n\n        if (fetcher.state === 'idle' && !fetcher.data) {\n            fetcher.submit(formData, {\n                method: 'GET',\n                action: QUERY_DOOH_BY_ID,\n            });\n        }\n    }, [selectedId, fetcher]);\n\n    if (!data || fetcher.state === 'loading') {\n        return <div>loading</div>;\n    }\n\n    return (\n        <div>\n            <div className='text-xl font-semibold text-black'>\n                {data.media_owner}\n            </div>\n            <div className='text-sm text-gray-600'>{data.site_name}</div>\n            <div className='mt-8'>\n                <div className='text-sm text-gray-600'>{`Display resolution: ${formatResolution(\n                    data.resolution\n                )}`}</div>\n                <div className='text-sm text-gray-600'>{`Recommended resolution: ${formatResolution(\n                    data.creative_dimension\n                )}`}</div>\n            </div>\n            <div className='mt-8'>\n                <button className='bg-blue-500 hover:bg-blue-700 text-white py-2 px-4 rounded-full'>\n                    Book now\n                </button>\n            </div>\n        </div>\n    );\n};\n\n// Utility function to format resolution\nconst formatResolution = (resolution: string | null) => {\n    if (!resolution) return '';\n    const [width, height] = resolution.split('x');\n    return `${width}px by ${height}px`;\n};\n", "import type { ReactNode } from 'react';\nimport { Fragment } from 'react';\n\nimport { Dialog, Transition } from '@headlessui/react';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\n\ntype PropsWithChildren<P> = P & { children?: ReactNode };\n\nexport interface SlideInDrawerProps {\n    open: boolean;\n    onClose: () => void;\n}\n\nexport const SlideInDrawer = ({\n    open,\n    onClose,\n    children,\n}: PropsWithChildren<SlideInDrawerProps>) => {\n    return (\n        <>\n            <Transition.Root show={open} as={Fragment}>\n                <Dialog as='div' className='relative z-10' onClose={onClose}>\n                    <Transition.Child\n                        as={Fragment}\n                        enter='ease-in-out duration-500'\n                        enterFrom='opacity-0'\n                        enterTo='opacity-100'\n                        leave='ease-in-out duration-500'\n                        leaveFrom='opacity-100'\n                        leaveTo='opacity-0'\n                    >\n                        <div className='fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity' />\n                    </Transition.Child>\n\n                    <div className='fixed inset-0 overflow-hidden'>\n                        <div className='absolute inset-0 overflow-hidden'>\n                            <div className='pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10'>\n                                <Transition.Child\n                                    as={Fragment}\n                                    enter='transform transition ease-in-out duration-500 sm:duration-700'\n                                    enterFrom='translate-x-full'\n                                    enterTo='translate-x-0'\n                                    leave='transform transition ease-in-out duration-500 sm:duration-700'\n                                    leaveFrom='translate-x-0'\n                                    leaveTo='translate-x-full'\n                                >\n                                    <Dialog.Panel className='pointer-events-auto relative w-screen max-w-xl'>\n                                        <Transition.Child\n                                            as={Fragment}\n                                            enter='ease-in-out duration-500'\n                                            enterFrom='opacity-0'\n                                            enterTo='opacity-100'\n                                            leave='ease-in-out duration-500'\n                                            leaveFrom='opacity-100'\n                                            leaveTo='opacity-0'\n                                        >\n                                            <div className='absolute left-0 top-0 -ml-8 flex pr-2 pt-4 sm:-ml-10 sm:pr-4'>\n                                                <button\n                                                    type='button'\n                                                    className='rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white'\n                                                    onClick={() => onClose()}\n                                                >\n                                                    <span className='sr-only'>\n                                                        Close panel\n                                                    </span>\n                                                    <XMarkIcon\n                                                        className='h-6 w-6'\n                                                        aria-hidden='true'\n                                                    />\n                                                </button>\n                                            </div>\n                                        </Transition.Child>\n                                        <div className='flex h-full flex-col overflow-y-scroll bg-white py-6 shadow-xl'>\n                                            <div className='relative mt-6 flex-1 px-4 sm:px-6'>\n                                                {children}\n                                            </div>\n                                        </div>\n                                    </Dialog.Panel>\n                                </Transition.Child>\n                            </div>\n                        </div>\n                    </div>\n                </Dialog>\n            </Transition.Root>\n        </>\n    );\n};\n", "import type { Marker, Point } from 'app/types';\n\nexport const mapMarkersToPoints = (markers: Marker[] | null): Point[] => {\n    return (\n        markers?.map((marker) => ({\n            type: 'Feature',\n            properties: {\n                siteId: marker.site_number,\n                cluster: false,\n                ...marker,\n            },\n            geometry: {\n                type: 'Point',\n                coordinates: [marker.longitude ?? 0, marker.latitude ?? 0],\n            },\n        })) ?? []\n    );\n};\n", "export default {'entry':{'module':'/build/entry.client-26V4ZTO5.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-ZKWS7JOM.js','/build/_shared/chunk-5US467UG.js','/build/_shared/chunk-NMZL6IDN.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-U6F4VPY4.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-KJSPAGDO.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/get-dooh-by-id':{'id':'routes/get-dooh-by-id','parentId':'root','path':'get-dooh-by-id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/get-dooh-by-id-JFUW6BNU.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'version':'ef4a1b8b','hmr':{'runtime':'/build/_shared/chunk-5US467UG.js','timestamp':1689134995046},'url':'/build/manifest-EF4A1B8B.js'};"],
  "mappings": "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",
  "names": ["cssBundleHref", "isbot", "import_react", "import_jsx_dev_runtime", "links", "loader", "import_react", "import_react", "import_jsx_dev_runtime", "import_react", "import_react", "x", "y", "import_react_map_gl", "import_jsx_dev_runtime", "import_react_map_gl", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "Map", "zoom", "import_react", "import_jsx_dev_runtime", "import_react", "import_outline", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "links", "loader"]
}
